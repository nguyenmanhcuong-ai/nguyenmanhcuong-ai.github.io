<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="/uploads/MC2.png" type="image/x-icon">
    <title>Hệ thống sinh viên</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #3498db;
            --secondary-color: #f8f9fa;
            --text-color: #333;
            --accent-color: #e74c3c;
            --success-color: #2ecc71;
            --error-color: #e74c3c;
            --border-radius: 8px;
            --box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Roboto', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: var(--text-color);
            background-color: var(--secondary-color);
        }

        .container {
            width: 90%;
            max-width: 1200px;
            margin: 0 auto;
        }

        header {
            background: linear-gradient(135deg, #3498db, #2c3e50);
            color: white;
            padding: 1rem 0;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
        }

        .logo-container {
            display: flex;
            flex-direction: column;
        }

        .logo-container h1 {
            font-size: 2.0rem;
            font-weight: bold;
            margin-bottom: 0.5rem;
        }

        .logo-container .welcome {
            font-size: 1.2rem;
            margin-bottom: 0.3rem;
        }

        /*h1 {
            font-size: clamp(10px, 5vw, 20px) !important;
            font-weight: 500 !important;
            margin: 0 !important;
            padding: 5px 0 !important;
            white-space: nowrap !important;
            overflow: hidden !important;
            text-overflow: ellipsis !important;
            max-width: 100% !important;
        }*/

        nav {
            flex-grow: 1;
            display: flex;
            justify-content: flex-end;
        }

        nav ul {
            list-style-type: none;
            display: flex;
            gap: 10px;
            margin: 0;
            padding: 0;
            flex-wrap: wrap;
            justify-content: flex-end;
        }

        nav ul li {
            margin: 5px 0;
        }

        nav ul li a {
            color: white;
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s ease;
            padding: 8px 10px;
            border-radius: var(--border-radius);
            white-space: nowrap;
            display: inline-block;
            font-size: 16px;
            margin-right: -10px;
        }

        nav ul li a:hover {
            background-color: rgba(255, 255, 255, 0.2);
        }

        @media (max-width: 1024px) {
            .header-content {
                flex-direction: column;
                align-items: stretch;
            }

            nav {
                margin-top: 10px;
            }

            nav ul {
                justify-content: space-around;
            }
        }

        @media (max-width: 768px) {
            .header-content {
                flex-direction: row;
                justify-content: space-between;
            }

            nav ul {
                justify-content: flex-end;
            }

            nav ul li a {
                font-size: 12px;
                padding: 6px 8px;
            }
        }

        nav ul li a:hover {
            background-color: rgba(255, 255, 255, 0.2);
        }

        .dashboard-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 30px;
            margin-top: 40px;
        }

        .dashboard-item {
            display: flex;
            flex-direction: column;
            /* Sắp xếp theo chiều dọc */
            justify-content: space-between;
            /* Căn giữa nội dung và nút */

            background-color: white;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            padding: 25px;
            transition: all 0.3s ease;
            animation: fadeInUp 0.5s ease forwards;
            opacity: 0;
        }


        .dashboard-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.50);
        }

        .dashboard-item h2 {
            color: var(--primary-color);
            margin-bottom: 20px;
            font-size: 22px;
            font-weight: 500;
            display: flex;
            align-items: center;
        }

        .dashboard-item h2 i {
            margin-right: 10px;
        }

        .info-list {
            list-style-type: none;
        }

        .info-list li {
            margin-bottom: 15px;
            display: flex;
            align-items: center;
        }

        .info-list li i {
            margin-right: 10px;
            color: var(--primary-color);
            width: 20px;
            text-align: center;
        }

        .btn {
            display: inline-block;
            text-align: center;
            /* Căn giữa nội dung nút */
            width: 55%;
            /* Đảm bảo nút chiếm toàn bộ chiều rộng */
            margin-left: 90px;
            /* Cách lề bên trái 10px */
            background-color: var(--accent-color);
            color: white;
            padding: 8px 20px;
            border-radius: var(--border-radius);
            text-decoration: none;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
            font-size: 16px;
            font-weight: 500;
            position: relative;
            overflow: hidden;
        }

        .btn:hover {
            background-color: #c0392b;
            transform: translateY(-2px);
        }

        .btn::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            background-color: rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            transform: translate(-50%, -50%);
            transition: width 0.3s ease, height 0.3s ease;
        }

        .btn:hover::after {
            width: 300%;
            height: 300%;
        }

        .class-list {
            list-style-type: none;
        }

        .class-list li {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px;
            border-bottom: 1px solid #eee;
            background-color: #f8f9fa;
            border-radius: var(--border-radius);
            margin-bottom: 10px;
            transition: all 0.3s ease;
        }

        .class-list li:hover {
            background-color: #e9ecef;
            transform: translateX(5px);
        }

        .class-list li:last-child {
            border-bottom: none;
        }

        /*footer {
            background: linear-gradient(to right, var(--primary-color), #2980b9);
            color: white;
            text-align: center;
            padding: 20px 0;
            margin-top: 40px;
        }*/

        /* footer p {
            font-size: 14px;
            opacity: 0.8;
        }*/

        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background-color: white;
            padding: 30px;
            border-radius: var(--border-radius);
            width: 100%;
            max-width: 500px;
            box-shadow: var(--box-shadow);
            transform: scale(0.7);
            opacity: 0;
            transition: all 0.3s ease;
        }

        .modal.active .modal-content {
            transform: scale(1);
            opacity: 1;
        }

        .modal-header {
            margin-bottom: 20px;
        }

        .modal-header h2 {
            color: var(--primary-color);
            font-size: 24px;
            font-weight: 500;
        }

        .modal-body form {
            display: grid;
            gap: 20px;
        }

        .form-group {
            display: flex;
            flex-direction: column;
        }

        .form-group label {
            margin-bottom: 5px;
            font-weight: 500;
        }

        .form-group input {
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: var(--border-radius);
            font-size: 16px;
            transition: border-color 0.3s ease;
        }

        .form-group input:focus {
            outline: none;
            border-color: var(--primary-color);
        }

        /*.modal-footer {
            margin-top: 20px;
            text-align: right;
        }*/

        .modal-close {
            background-color: var(--error-color);
            color: white;
            padding: 10px 15px;
            border-radius: var(--border-radius);
            cursor: pointer;
            border: none;
            font-size: 16px;
            margin-left: 10px;
            transition: all 0.3s ease;
        }

        .modal-close:hover {
            background-color: #c0392b;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .dashboard-item:nth-child(1) {
            animation-delay: 0.1s;
        }

        .dashboard-item:nth-child(2) {
            animation-delay: 0.2s;
        }

        .dashboard-item:nth-child(3) {
            animation-delay: 0.3s;
        }

        .dashboard-item:nth-child(4) {
            animation-delay: 0.4s;
        }

        .info-list li i,
        .dashboard-item h2 i {
            transition: transform 0.3s ease;
        }

        .info-list li:hover i,
        .dashboard-item:hover h2 i {
            transform: scale(1.2);
        }

        ::-webkit-scrollbar {
            width: 10px;
        }

        ::-webkit-scrollbar-track {
            background: #f1f1f1;
        }

        ::-webkit-scrollbar-thumb {
            background: var(--primary-color);
            border-radius: 5px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: #2980b9;
        }

        #passwordChangeModal .modal-content {
            position: relative;
            padding-top: 40px;
            /* Tăng padding-top để có chỗ cho nút close */
        }

        #passwordChangeModal .modal-header {
            text-align: center;
            margin-bottom: 20px;
        }

        #passwordChangeModal .modal-header h2 {
            margin: 0;
        }

        #passwordChangeCloseBtn {
            position: absolute;
            top: 10px;
            right: 10px;
            font-size: 18px;
            /* Giảm kích thước font */
            cursor: pointer;
            color: #aaa;
            transition: all 0.3s ease;
            width: 24px;
            height: 24px;
            line-height: 20px;
            /* Điều chỉnh line-height */
            text-align: center;
            border-radius: 50%;
            background-color: #f0f0f0;
            border: none;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        #passwordChangeCloseBtn:hover {
            color: #333;
            background-color: #e0e0e0;
        }

        .notification {
            position: fixed;
            top: 320px;
            right: 520px;
            background-color: var(--success-color);
            color: white;
            padding: 15px 20px;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            opacity: 0;
            transform: translateY(-20px);
            transition: all 0.3s ease;
            z-index: 1001;
        }

        .notification.show {
            opacity: 1;
            transform: translateY(0);
        }

        .notification.error {
            background-color: var(--error-color);
        }
        @media(min-width: 500px) and (max-width: 1200px){
            .dashboard-grid{
                margin-left: 100px;
            }
        }
        @media (min-width: 310) and (max-width: 500) {
            .header, .footer {
                width: 100vw;
                max-width: 100%;
                box-sizing: border-box;
                padding-left: 15px;
                padding-right: 15px;
            }
            .dashboard-item{
                margin-left: 100px;
            }
            .header-content {
                flex-direction: column;
                align-items: flex-start;
                width: 100%;
            }
        
            .header-content h1 {
                font-size: 24px;
                margin-bottom: 15px;
            }
        
            nav ul {
                flex-direction: column;
                gap: 10px;
            }

            nav ul li {
                width: 100%;
            }

            nav ul li a {
                display: block;
                padding: 10px;
                text-align: center;
                background-color: rgba(255, 255, 255, 0.1);
            }

            .dashboard-grid {
                grid-template-columns: 1fr;
            }

            .dashboard-item {
                padding: 5px;
                width: 390px;
                height: 610px;
                margin-left: 120px;
            }

            .modal-content {
                padding: 20px;
                width: 90%;
            }
        }

        /* Styles for the marquee */
        .marquee-container {
            background-color: #f0f8ff;
            /* Light blue background */
            overflow: hidden;
            white-space: nowrap;
            border-top: 1px solid #d1e8ff;
            border-bottom: 1px solid #d1e8ff;
        }

        .marquee-content {
            display: inline-block;
            padding-left: 100%;
            animation: marquee 25s linear infinite;
        }

        @keyframes marquee {
            0% {
                transform: translate(0, 0);
            }

            100% {
                transform: translate(-100%, 0);
            }
        }

        .marquee-text {
            display: inline-block;
            padding: 10px 0;
            font-size: 1rem;
            color: #e40f0b;
            /* Dark blue text color */
        }

        /* Thêm vào phần <style> */
        .custom-modal {
            display: none;
            /* Mặc định ẩn modal */
            position: fixed;
            /* Gắn modal ở vị trí cố định */
            z-index: 1000;
            /* Đảm bảo modal nằm trên các phần tử khác */
            left: 0;
            top: 0;
            width: 100%;
            /* Chiếm toàn bộ chiều rộng */
            height: 100%;
            /* Chiếm toàn bộ chiều cao */
            overflow: auto;
            /* Thêm thanh cuộn nếu nội dung quá dài */
            background-color: rgba(0, 0, 0, 0.7);
            /* Nền mờ đen */
        }

        /* Nội dung modal */
        .custom-modal-content {
            background-color: #fff;
            /* Nền trắng */
            margin: 5% auto;
            /* Căn giữa modal */
            margin-top: 20px;
            padding: 20px;
            /* Padding bên trong modal */
            border-radius: 12px;
            /* Bo tròn góc */
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
            /* Đổ bóng cho modal */
            max-width: 1200px;
            /* Chiều rộng tối đa */
            /*width: 90%; /* Đảm bảo responsive */
            max-height: 90vh;
            /* Giới hạn chiều cao tối đa */
            overflow-y: auto;
            /* Cho phép cuộn nếu nội dung dài */


        }

        /* Đầu modal */
        .custom-modal-header {
            display: flex;
            /* Sử dụng flexbox để sắp xếp */
            justify-content: space-between;
            /* Tách rời giữa tiêu đề và nút đóng */
            align-items: center;
            /* Căn giữa theo chiều dọc nếu cần */
            border-bottom: 2px solid #007BFF;
            /* Đường viền dưới màu xanh */
            padding-bottom: 10px;
            /* Padding dưới tiêu đề */
        }

        /* Tiêu đề modal */
        .custom-modal-title {
            text-align: center;
            /* Căn giữa tiêu đề */
            margin: 0;
            /* Để đảm bảo không có khoảng cách không cần thiết */
            font-size: 30px;
            /* Kích thước chữ lớn */
            color: #007BFF;
            /* Màu chữ xanh */
            flex-grow: 1;
            /* Để tiêu đề chiếm hết không gian có sẵn */

        }

        .new-badge {
            color: red;
            /* Màu chữ đỏ */
            font-weight: bold;
            /* Đậm chữ */
            margin-left: 8px;
            /* Khoảng cách bên trái */
            font-style: italic;
            /* In nghiêng */
            animation: blink-animation 0.75s infinite;
            /* Tăng tốc độ nhấp nháy */
        }

        /* Định nghĩa hiệu ứng nhấp nháy */
        @keyframes blink-animation {
            0% {
                opacity: 1;
                transform: scale(1);
                /* Kích thước gốc */
            }

            50% {
                opacity: 0.5;
                /* Mờ đi */
                transform: scale(1.2);
                /* Phóng to */
            }

            100% {
                opacity: 1;
                /* Trở lại kích thước và độ mờ gốc */
            }
        }


        /* Nút đóng modal */
        .custom-close-button {
            cursor: pointer;
            /* Con trỏ khi hover */
            font-size: 28px;
            /* Kích thước nút */
            color: #ff4c4c;
            /* Màu đỏ cho nút đóng */
            transition: color 0.3s;
            /* Hiệu ứng chuyển màu */
        }

        /* Hiệu ứng hover cho nút đóng */
        .custom-close-button:hover {
            color: #ff1a1a;
            /* Thay đổi màu khi hover */
        }


        /* Thời gian thông báo */
        .notification-time {
            font-size: 14px;
            /* Kích thước chữ nhỏ hơn cho thời gian */
            color: #999;
            /* Màu chữ nhạt hơn cho thời gian */
            margin-left: 10px;
            /* Khoảng cách giữa nội dung thông báo và thời gian */
            font-style: italic;
            /* In nghiêng chữ */
        }

        .password-strength {
            margin-top: 5px;
            font-weight: bold;
            font-size: 0.9em;

        }

        .strength-cực-yếu {
            color: #ff0000;
        }

        .strength-yếu {
            color: #ff6600;
        }

        .strength-trung-bình {
            color: #ffcc00;
        }

        .strength-mạnh {
            color: #00cc00;
        }

        .strength-cực-mạnh {
            color: #006600;
        }

        .password-hints {
            margin-top: 10px;
            font-size: 0.9em;
            color: #666;
        }

        .password-hints ul {
            margin: 5px 0;
            padding-left: 20px;
        }

        .password-hints li {
            margin-bottom: 3px;
        }

        .password-match {
            margin-top: 5px;
            font-weight: bold;
            font-size: 0.9em;
        }

        #evaluationModal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.4);
        }

        .evaluation-modal-content {
            background-color: #fefefe;
            margin: 5% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 600px;
            border-radius: 8px;
        }

        .close-evaluation {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

        .close-evaluation:hover,
        .close-evaluation:focus {
            color: #000;
            text-decoration: none;
            cursor: pointer;
        }

        .evaluation-form h2 {
            color: #2980b9;
            margin-bottom: 20px;
        }

        .evaluation-category {
            margin-bottom: 15px;
        }

        .evaluation-category h3 {
            margin-bottom: 10px;
            color: #34495e;
        }

        .rating {
            display: flex;
            flex-direction: row-reverse;
            justify-content: flex-end;
        }

        .rating>input {
            display: none;
        }

        .rating>label {
            position: relative;
            width: 1em;
            font-size: 30px;
            color: #ffd700;
            cursor: pointer;
        }

        .rating>label::before {
            content: "\2605";
            position: absolute;
            opacity: 0;
        }

        .rating>label:hover:before,
        .rating>label:hover~label:before {
            opacity: 1 !important;
        }

        .rating>input:checked~label:before {
            opacity: 1;
        }

        .rating:hover>input:checked~label:before {
            opacity: 0.4;
        }

        .submit-evaluation {
            background-color: #2980b9;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            margin-top: 20px;
        }

        .submit-evaluation:hover {
            background-color: #3498db;
        }

        .info-table td {
            padding: 10px;
            border: 1px solid #ddd;
        }

        .info-table a {
            color: #007bff;
            text-decoration: none;
        }

        .info-table a:hover {
            text-decoration: underline;
        }

        .footer {
            background: linear-gradient(to right, #2c3e50, #3498db);
            color: #ecf0f1;
            padding: 40px 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin-top: 50px;
        }

        .footer-content {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            max-width: 1300px;
            margin: 0 auto;
            padding: 0 20px;
            gap: 70px;
            /* Khoảng cách giữa các phần */

        }

        .footer-section {
            flex: 1;
            margin-bottom: -10px;
            min-width: 200px;

        }

        .footer-section h3 {
            color: #f39c12;
            margin-bottom: 20px;
            font-size: 18px;
            font-weight: 600;
        }

        .footer-section ul {
            list-style-type: none;
            padding: 0;
        }

        .footer-section ul li {
            margin-bottom: 10px;
        }

        .footer-section ul li a {
            color: #bdc3c7;
            text-decoration: none;
            transition: color 0.3s ease;
        }

        .footer-section ul li a:hover {
            color: #f39c12;
        }

        .social-icons a {
            display: inline-block;
            width: 35px;
            height: 35px;
            background-color: #34495e;
            color: #ecf0f1;
            border-radius: 50%;
            text-align: center;
            line-height: 35px;
            margin-right: 10px;
            transition: background-color 0.3s ease;
        }

        .social-icons a:hover {
            background-color: #f39c12;
        }

        .footer-bottom {
            text-align: center;
            padding-top: 20px;
            border-top: 1px solid #34495e;
            margin-top: 20px;
        }

        @media (max-width: 768px) {
            .footer-content {
                flex-direction: column;
            }

            .footer-section {
                margin-bottom: 30px;
            }
        }

        .social-icons {
            display: flex;
            flex-direction: column;
            align-items: left;
        }

        .icon-row {
            display: flex;
            margin-bottom: 10px;
            gap: 40px;
            margin-left: 50px
        }

        .icon-row a {
            font-size: 24px;
            margin: 0 0;
            text-decoration: none;
        }

        .icon-row a:hover {
            color: #007bff;
        }

        .student-portal-link {
            text-decoration: none;
            /* Xóa gạch chân */
            color: #FFA500;
            /* Màu chữ cam sáng */
            font-weight: bold;
            /* Đậm chữ */
            transition: color 0.3s;
            /* Hiệu ứng chuyển màu khi hover */
        }

        .student-portal-link:hover {
            color: #FFD700;
            /* Màu vàng khi hover */
        }

        .video-item {
            margin-bottom: 20px;
            /* Khoảng cách giữa các video */
        }

        .video-item iframe {
            margin-top: 15px;
            width: 100%;
            /* Chiều rộng video đầy đủ */
            height: 160px;
            /* Chiều cao video cố định */
            max-width: 100%;
            /* Không vượt quá chiều rộng của container */
            box-sizing: border-box;
            /* Bao gồm padding và border trong kích thước */
        }

        /* Thêm vào phần <style> hiện có hoặc tạo một file CSS mới */

        .dashboard-container {
            display: flex;
            gap: 30px;
            margin-top: 40px;
            padding-right: 0;
            /* Remove right padding if any */

        }

        .dashboard-left {
            flex: 3;
            /* Chiếm 3 phần */
            margin-left: -70px;
            margin-top: -40px;

        }



        .dashboard-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            /* 2 cột */
            gap: 30px;

        }


        .dashboard-right {
            width: 470px;
            /* Adjusted for wider notification panel */
            height: calc(100vh - 40px);
            position: sticky;
            top: 20px;
            overflow-y: auto;
            padding-right: 30px;
            /* Add some padding to separate from notification panel */
            margin-right: -140px;
        }

        .notification-panel {
            background-color: #e5f5ff;
            border-radius: 12px;
            padding: 25px;
            box-shadow: 0 15px 30px rgba(27, 40, 54, 0.2);
            /* Bóng đổ mạnh hơn khi hover */
            width: 430px;
            transition: background-color 0.3s ease, box-shadow 0.3s ease, transform 0.3s ease;
            /* Thêm hiệu ứng chuyển tiếp */
        }


        .notification-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            border-bottom: 2px solid #ecf0f1;
            padding-bottom: 15px;
        }

        .notification-header h2 {
            font-size: 1.75rem;
            color: #11559a;
            font-weight: 900;
        }

        .notification-controls {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .notification-count {
            background: linear-gradient(135deg, #3498db, #2c3e50);
            color: #ffffff;
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 0.9rem;
            font-weight: 600;
        }

        .refresh-btn {
            background: none;
            border: none;
            color: #3498db;
            cursor: pointer;
            font-size: 1.2rem;
            transition: all 0.3s ease;
        }

        .refresh-btn:hover {
            transform: rotate(180deg);
            color: #2c3e50;
        }

        .notification-list {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }

        .notification-item {
            background-color: #ecf0f1;
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 15px;
            transition: all 0.3s ease;
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            border-left: 4px solid #3498db;
        }

        .notification-item:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(44, 62, 80, 0.1);
        }

        .notification-title {
            font-size: 1.1rem;
            font-weight: 600;
            margin: 0 0 8px 0;
            color: #207bd6;
        }

        .notification-content {
            flex-grow: 1;
            overflow: hidden;
            margin-top: -10px;
        }

        .notification-content p {
            font-size: 0.95rem;
            color: #000000;
            margin: 0 0 10px 0;
            line-height: 1.5;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            margin-top: -5px;

        }


        .notification-meta {
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 0.85rem;
            color: #7f8c8d;
        }

        .notification-time i {
            margin-right: 5px;
        }

        .new-badge {
            background: linear-gradient(135deg, #3498db, #e74c3c);
            color: #ffffff;
            padding: 3px 10px;
            border-radius: 15px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            margin-right: 10px;
            margin-top: -5px;

        }

        .no-notifications {
            text-align: center;
            color: #7f8c8d;
            font-style: italic;
            margin-top: 20px;
            padding: 20px;
            background-color: #ecf0f1;
            border-radius: 12px;
        }

        .view-all-btn {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
            padding: 14px;
            background: linear-gradient(135deg, #3498db, #2c3e50);
            color: #ffffff;
            border: none;
            border-radius: 12px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-top: 20px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .view-all-btn:hover {
            opacity: 0.9;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(44, 62, 80, 0.2);
        }

        .view-all-btn span {
            margin-right: 10px;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(10px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .notification-item {
            animation: fadeInUp 0.5s ease forwards;
            opacity: 0;
            animation-delay: calc(var(--item-index) * 0.1s);
        }

        .notification-header-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }

        @keyframes shake {

            0%,
            100% {
                transform: rotate(0deg);
            }

            25% {
                transform: rotate(-15deg);
            }

            50% {
                transform: rotate(0deg);
            }

            75% {
                transform: rotate(15deg);
            }
        }

        .shake-animation {
            animation: shake 1s infinite;
            /* Thời gian 1s và lặp vô hạn */
        }

        /* Media queries để đảm bảo responsive */
        @media (max-width: 1200px) {
            .dashboard-container {
                flex-direction: column;
            }

            .dashboard-right {
                margin-top: 30px;
            }
        }

        @media (max-width: 768px) {
            .dashboard-grid {
                grid-template-columns: 1fr;
                /* 1 cột khi màn hình nhỏ */
            }
        }

        .description {
            margin-bottom: 15px;
            /* Điều chỉnh khoảng cách theo ý muốn */
        }

        @media (min-width: 290px) and (max-width: 500px) {
            .dashboard-item{
                margin-left: 80px;
            }
            .notification-panel{
                width: 360px;
            }
            .footer{
                min-width: 290px;
            }
            .header{
                min-width: 290px;
                margin-left: 30px;

            }
    
        }
        .slider-container {
            position: relative;
            width: 100%;
            height: 500px;
            overflow: hidden;
            background: #f8f9fa;
        }

        .slider {
            display: flex;
            width: 400%;
            height: 100%;
            transition: transform 1s ease-in-out;
        }

        .slide {
            width: 25%;
            height: 100%;
            position: relative;
            overflow: hidden;
        }

        .slide img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            object-position: center;
        }

        .slide-content {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            text-align: center;
            color: white;
            z-index: 2;
            width: 80%;
        }

        .slide::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.4);
        }

        .slide-content h2 {
            font-size: 2.5rem;
            margin-bottom: 20px;
            opacity: 0;
            transform: translateY(20px);
            transition: all 0.5s ease;
        }

        .slide-content p {
            font-size: 1.2rem;
            opacity: 0;
            transform: translateY(20px);
            transition: all 0.5s ease 0.2s;
        }

        .slide.active .slide-content h2,
        .slide.active .slide-content p {
            opacity: 1;
            transform: translateY(0);
        }

        .slider-dots {
            position: absolute;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            display: flex;
            gap: 10px;
            z-index: 3;
        }

        .dot {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.5);
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .dot.active {
            background: white;
            transform: scale(1.2);
        }

        .slider-arrows {
            position: absolute;
            top: 50%;
            width: 100%;
            transform: translateY(-50%);
            z-index: 3;
            display: flex;
            justify-content: space-between;
            padding: 0 20px;
        }

        .arrow {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .arrow:hover {
            background: rgba(255, 255, 255, 0.4);
        }

        .arrow i {
            color: white;
            font-size: 24px;
        }

        @media (max-width: 768px) {
            .slide-content h2 {
                font-size: 2rem;
            }

            .slide-content p {
                font-size: 1rem;
            }
        }


    </style>
</head>

<body>
    <header>
        <div class="container">
            <div class="header-content">
                <div class="logo-container">
                    <h1>
                        <a href="/students/<%= user.iduser %>/home" class="student-portal-link">Cổng thông tin sinh
                            viên</a>
                    </h1>
                    <span class="welcome">Chào mừng, <%= user.fullname %>!</span>
                </div>
                <nav>
                    <ul>
                        <li><a href="/students/<%= user.iduser %>/home"><i class="fas fa-home"></i> Trang chủ</a></li>
                        <li>
                            <a href="#" id="changePasswordBtn" role="button" tabindex="0">
                                <i class="fas fa-key" aria-hidden="true"></i> Đổi mật khẩu
                            </a>
                        </li>
                        <li><a href="/attendanceHistory"><i class="fas fa-history"></i> Lịch sử điểm danh</a></li>
                        <li><a href="/studentScore"><i class="fas fa-graduation-cap"></i> Kết quả học tập</a></li>
                        <li><a href="/lessons"><i class="fas fa-book"></i> Thư viện</a></li>
                        <li><a href="/"><i class="fas fa-sign-out-alt"></i> Đăng xuất</a></li>
                    </ul>
                </nav>
            </div>
        </div>
    </header>

    <div class="marquee-container">
        <div class="marquee-content">
            <span class="marquee-text">
                Chào mừng <%= user.fullname %> đã đến với hệ thống thông tin sinh viên điểm danh và quản lý học tập trực
                    tuyến của Cường
                    Nguyễn. Sinh viên thường xuyên truy cập để theo dõi và tải các lại liệu cần thiết.
            </span>
        </div>
    </div>

    <!--<div class="slider-container">
        <div class="slider">
            <div class="slide active">
                <img src="/uploads/mc1.jpg" alt="MC English 1">
                <div class="slide-content">
                    <h2>Welcome to MC English</h2>
                    <p>Empowering students through innovative English education</p>
                </div>
            </div>
            <div class="slide">
                <img src="/uploads/mc2.jpg" alt="MC English 2">
                <div class="slide-content">
                    <h2>Professional Teaching Staff</h2>
                    <p>Learn from experienced native speakers and certified teachers</p>
                </div>
            </div>
            <div class="slide">
                <img src="/uploads/mc3.jpg" alt="MC English 3">
                <div class="slide-content">
                    <h2>Modern Learning Environment</h2>
                    <p>State-of-the-art facilities for optimal learning experience</p>
                </div>
            </div>
            <div class="slide">
                <img src="/uploads/mc4.jpg" alt="MC English 4">
                <div class="slide-content">
                    <h2>Join Our Community</h2>
                    <p>Be part of our growing family of successful English learners</p>
                </div>
            </div>
        </div>

        <div class="slider-dots">
            <div class="dot active"></div>
            <div class="dot"></div>
            <div class="dot"></div>
            <div class="dot"></div>
        </div>

        <div class="slider-arrows">
            <div class="arrow prev">
                <i class="fas fa-chevron-left"></i>
            </div>
            <div class="arrow next">
                <i class="fas fa-chevron-right"></i>
            </div>
        </div>
    </div>-->

    <main class="container">
        <div class="dashboard-container">
            <div class="dashboard-left">
                <div class="dashboard-grid">

                    <div class="dashboard-item">
                        <h2><i class="fas fa-user-circle"></i> Thông tin cá nhân</h2>
                        <ul class="info-list">
                            <li><i class="fas fa-user"></i> Họ và tên: <%= user.fullname %>
                            </li>
                            <li><i class="fas fa-id-card"></i> Mã số sinh viên: <%= user.iduser %>
                            </li>
                            <li><i class="fas fa-user-tag"></i> Tên đăng nhập: <%= user.username %>
                            </li>
                            <li><i class="fas fa-home"></i> Nơi ở hiện nay: <%= user.current_residence %>
                            </li>
                            <li><i class="fas fa-phone"></i> Số điện thoại: <%= user.phone %>
                            </li>
                            <li><i class="fas fa-envelope"></i> Email: <%= user.email %>
                            </li>
                        </ul>
                        <button class="btn" id="updateBtn"><i class="fas fa-edit"></i> Cập nhật thông tin</button>
                    </div>

                    <div class="dashboard-item">
                        <h2><i class="fas fa-chalkboard-teacher"></i> Lớp học và điểm danh</h2>
                        <% if (typeof classes !=='undefined' && classes && classes.length> 0) { %>
                            <ul class="class-list">
                                <% classes.forEach(function(classItem) { %>
                                    <li>
                                        <%= classItem.nameclass %>
                                            <a href="/attendance/<%= classItem.idclass %>" class="btn"><i
                                                    class="fas fa-clipboard-check"></i> Điểm danh</a>
                                    </li>
                                    <% }); %>
                            </ul>
                            <% } else { %>
                                <p><i class="fas fa-check-circle"></i> Sinh viên truy cập để theo dõi các lớp đang tham
                                    gia và
                                    tiến độ điểm danh của mình.</p>
                                <p><i class="fas fa-check-circle"></i> Sinh viên lưu ý điểm danh đúng lớp đang học và
                                    chính xác
                                    buổi đang học.</p>
                                <p><i class="fas fa-check-circle"></i> Trường hợp có vấn đề hoặc sự cố liên quan đến
                                    điểm danh
                                    vui lòng sinh viên liên hệ với người dạy.</p>
                                <% } %>
                                    <a href="/studentclass/<%= user.iduser %>" class="btn"><i class="fas fa-eye"></i>
                                        Xem tất cả
                                        lớp học</a>
                    </div>

                    <div class="dashboard-item">
                        <h2><i class="fas fa-book"></i> Tài liệu học tập</h2>
                        <p class="description"><i class="fas fa-info-circle"></i> Truy cập các bài giảng trực tuyến để
                            củng cố kiến thức của bạn.</p>
                        <p class="description"><i class="fas fa-info-circle"></i> Tìm và tải về các tài liệu cần thiết
                            để ôn tập hiệu quả.</p>
                        <p class="description"><i class="fas fa-info-circle"></i> Khám phá các tài liệu tham khảo bổ
                            sung cho nghiên cứu chuyên sâu hơn.</p>
                        <a href="/material" class="btn"><i class="fas fa-file-alt"></i> Xem tài liệu</a>
                    </div>

                    <div class="dashboard-item">
                        <h2><i class="fas fa-chart-line"></i> Kết quả học tập</h2>
                        <p><i class="fas fa-check-circle"></i> Xem điểm số và đánh giá của các môn học.</p>
                        <p><i class="fas fa-chart-bar"></i> Theo dõi sự tiến bộ trong quá trình học tập.</p>
                        <a href="/studentScore" class="btn"><i class="fas fa-graduation-cap"></i> Xem kết quả</a>
                    </div>

                    <!-- Thêm phần đánh giá vào dashboard -->
                    <div class="dashboard-item evaluation">
                        <h2><i class="fas fa-clipboard-check"></i> Đánh giá giảng viên định kỳ</h2>
                        <p>Đánh giá chất lượng giảng dạy của giảng viên để giúp cải thiện chất lượng đào tạo.</p>
                        <button id="openEvaluationBtn" class="btn"
                            onclick="window.location.href='/evaluationform/<%= user.iduser %>'"><i
                                class="fas fa-star"></i> Bắt
                            đầu đánh giá</button>
                    </div>

                    <div class="dashboard-item" class="custom-modal">
                        <h2><i class="fas fa-heartbeat" class="custom-modal-title"></i> Theo dõi sức khỏe sinh viên</h2>
                        <p class="description"><i class="fas fa-info-circle"></i> Khảo sát định kỳ để đánh giá và cải
                            thiện sức khỏe của
                            bạn.</p>
                        <p class="description"><i class="fas fa-info-circle"></i> Sức khỏe tốt ảnh hưởng tích cực tới
                            thành tích học tập.
                        </p>
                        <p class="description"><i class="fas fa-info-circle"></i> Thường xuyên trao đổi những vấn đề sức
                            khỏe và tâm lý với
                            người
                            thân.</p>
                        <a href="/health-survey/<%= user.iduser %>" class="btn"><i class="fas fa-clipboard-check"></i>
                            Bắt đầu
                            khảo sát</a>
                    </div>
                    <!-- Dashboard Item cho Video Học Tập -->
                    <div class="dashboard-item">
                        <h2> <i class="fa-solid fa-video"></i>Video Học Tập</h2>
                        <div class="video-list" id="videoList">
                            <!-- Video sẽ được thêm vào đây -->
                        </div>
                        <button id="viewMoreButton" onclick="openVideoModal()" class="btn"><i
                                class="fa-solid fa-eye"></i>
                            Xem thêm</button>
                    </div>

                    <div class="dashboard-item">
                        <h2 class="dashboard-title">
                            <i class="fas fa-info-circle" style="margin-right: 8px;"></i>
                            Thông tin cổng TT sinh viên
                        </h2>
                        <table class="info-table">
                            <tr>
                                <td><strong>Tên:</strong></td>
                                <td>
                                    <a href="/aboutus" style="color: #0000EE;">Cổng thông tin sinh viên</a>
                                </td>
                                
                            </tr>
                            <tr>
                                <td><strong>Mã:</strong></td>
                                <td>003</td>
                            </tr>
                            <tr>
                                <td><strong>Chức năng:</strong></td>
                                <td>Quản lý sinh viên</td>
                            </tr>
                            <tr>
                                <td><strong>Đơn vị xử lý sự cố phần mềm:</strong></td>
                                <td><a href="mailto:minhph313@gmail.com">minhph313@gmail.com</a></td>
                            </tr>
                            <tr>
                                <td><strong>Fan Page:</strong></td>
                                <td><a href="https://www.facebook.com/nmc0910?mibextid=LQQJ4d" target="_blank">MC
                                        Software</a>
                                </td>
                            </tr>
                            <tr>
                                <td><strong>Đơn vị hỗ trợ thông tin:</strong></td>
                                <td>Cường Mạnh Nguyễn</td>
                            </tr>
                            <tr>
                                <td><strong>Phiên bản:</strong></td>
                                <td>24.7</td>
                            </tr>
                            <tr>
                                <td><strong>Trình duyệt hỗ trợ tốt nhất:</strong></td>
                                <td>
                                    <img src="/uploads/firefox.png" alt="Firefox"
                                        style="width: 42px; height: 42px; margin-right: 8px; vertical-align: middle;">
                                    <img src="/uploads/chrome.png" alt="Google Chrome"
                                        style="width: 42px; height: 42px; vertical-align: middle;">
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>


            <div class="dashboard-right">
                <div class="notification-panel">
                    <div class="notification-header">
                        <h2><i class="fas fa-bell shake-animation"></i> Thông báo</h2>
                        <div class="notification-controls">
                            <span class="notification-count" title="Tổng số thông báo">
                                <%= notifications.length %>
                            </span>
                            <button class="refresh-btn" title="Làm mới thông báo"><i
                                    class="fas fa-sync-alt"></i></button>
                        </div>
                    </div>
                    <div id="notificationsContainer">
                        <% if (notifications && notifications.length> 0) { %>
                            <ul class="notification-list">
                                <% notifications.slice(0, 5).forEach(function(notification, index) { %>
                                    <li class="notification-item" data-notification-id="<%= notification.id %>"
                                        onclick="showNotificationDetails(<%= notification.id %>)">
                                        <div class="notification-content">
                                            <div class="notification-header-row">
                                                <h3 class="notification-title">Thông báo <%= notifications.length -
                                                        index%>
                                                </h3>
                                                <% if (index < 3) { %>
                                                    <span class="new-badge">Mới</span>
                                                    <% } %>
                                            </div>
                                            <p title="<%= notification.content %>"><%-
                                                    truncateText(notification.content, 15) %></p>
                                            <div class="notification-meta">
                                                <span class="notification-time"><i class="far fa-clock"></i>
                                                    <%= new Date(notification.createdat).toLocaleString('vi-VN') %>
                                                </span>

                                            </div>
                                        </div>
                                    </li>
                                    <% }); %>
                            </ul>
                            <% } else { %>
                                <p class="no-notifications"><i class="fas fa-info-circle"></i> Hiện tại không có thông
                                    báo nào.</p>
                                <% } %>
                    </div>
                    <button id="viewAllNotificationsBtn" class="view-all-btn">
                        <span>Xem tất cả thông báo</span>
                        <i class="fas fa-arrow-right"></i>
                    </button>
                </div>
            </div>

        </div>

    </main>

    <!-- Modal Video Học Tập -->
    <!-- Modal Video Học Tập -->
    <div id="videoModal" class="custom-modal">
        <div class="custom-modal-content">
            <div class="custom-modal-header">
                <h2 class="custom-modal-title">Danh sách Video Học Tập</h2>
                <span class="custom-close-button" onclick="closeVideoModal()">&times;</span>
            </div>
            <div id="allVideos">
                <!-- Tất cả video sẽ được thêm vào đây -->
            </div>
        </div>
    </div>


    <!-- Modal Thông Báo -->
    <div id="customNotificationModal" class="custom-modal">
        <div class="custom-modal-content">
            <div class="custom-modal-header">
                <h2 class="custom-modal-title">Chi tiết thông báo</h2>
                <span class="custom-close-button" onclick="closeModal()">&times;</span>
            </div>
            <div id="notificationDetails" style="padding: 20px 30px;">
                <!-- Nội dung thông báo sẽ được thêm vào đây -->
            </div>
        </div>
    </div>



    <div id="updateModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>Cập nhật thông tin cá nhân</h2>
            </div>
            <div class="modal-body">
                <form id="updateForm">
                    <div class="form-group">
                        <label for="fullname">Họ và tên:</label>
                        <input type="text" id="fullname" name="fullname" value="<%= user.fullname %>" required>
                    </div>
                    <div class="form-group">
                        <label for="phone">Số điện thoại:</label>
                        <input type="text" id="phone" name="phone" value="<%= user.phone %>" required>
                    </div>
                    <div class="form-group">
                        <label for="residence">Nơi ở hiện nay:</label>
                        <input type="text" id="residence" name="residence" value="<%= user.current_residence %>"
                            required>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn"><i class="fas fa-save"></i> Cập nhật</button>
                        <button type="button" class="modal-close"><i class="fas fa-times"></i> Hủy</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div id="passwordChangeModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>Đổi mật khẩu</h2>
                <span id="passwordChangeCloseBtn" class="modal-close">&times;</span>
            </div>
            <form id="passwordChangeForm">
                <div class="form-group">
                    <label for="currentPassword">Mật khẩu hiện tại:</label>
                    <input type="password" id="currentPassword" name="currentPassword" required>
                </div>
                <div class="form-group">
                    <label for="newPassword">Mật khẩu mới:</label>
                    <input type="password" id="newPassword" name="newPassword" required>
                    <div id="passwordStrength" class="password-strength"></div>
                    <div id="passwordHints" class="password-hints"></div>
                </div>
                <div class="form-group">
                    <label for="confirmPassword">Xác nhận mật khẩu mới:</label>
                    <input type="password" id="confirmPassword" name="confirmPassword" required>
                    <div id="passwordMatch" class="password-match"></div> <!-- Thông báo trùng khớp mật khẩu -->
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn"><i class="fas fa-key"></i> Đổi mật khẩu</button>
                </div>
            </form>
        </div>
    </div>
    <div id="notification" class="notification"></div>

    <footer class="footer">
        <div class="footer-content">
            <div class="footer-section">
                <h3>
                    <a href="/aboutus" style="text-decoration: none; color: inherit;">
                        <i class="fa-solid fa-address-card" style="margin-right: 10px"></i>Về chúng tôi
                    </a>
                </h3>
                    <p style="text-align: justify;">Hệ thống quản lý sinh viên của chúng tôi cung cấp giải pháp toàn diện,
                    giúp quản lý thông tin, học tập, và các hoạt động của sinh viên một cách hiệu quả và chính xác trong
                    việc theo dõi, quản lý học tập, học phí, và các hoạt động liên quan.
                </p>
            </div>
            <div class="footer-section">
                <h3><i class="fa-sharp fa-solid fa-link" style="margin-right : 10px"></i>Liên kết nhanh</h3>
                <ul>
                    <li><a href="#">Trang chủ</a></li>
                    <li><a href="/studentclass/<%= user.iduser %>">Điểm danh</a></li>
                    <li><a href="/material">Tài liệu</a></li>
                    <li><a href="/studentScore">Kết quả học tập</a></li>
                    <li><a href="/lessons">Thư viện bài học</a></li>
                </ul>
            </div>
            <div class="footer-section">
                <h3><i class="fas fa-map-marker-alt" style="margin-right : 10px"></i>
                    Liên hệ</h3>
                <ul>
                    <li>
                        <i class="fas fa-map-marker-alt"></i>
                        <a href="https://www.google.com/maps?q=Tân+Phú,+Quận+7,+TPHCM" target="_blank">Tân Phú, Quận 7,
                            TPHCM</a>
                    </li>

                    <li>
                        <i class="fas fa-map-marker-alt"></i>
                        <a href="https://www.google.com/maps?q=Ngã+tư+Hàng+Xanh,+Bình+Thạnh,+TPHCM" target="_blank">Ngã
                            tư Hàng Xanh, Bình Thạnh, TPHCM</a>
                    </li>
                    <li>
                        <i class="fas fa-phone"></i>
                        <a href="tel:0362443830">0362443830</a>
                    </li>
                    <li>
                        <i class="fas fa-envelope"></i>
                        <a href="mailto:mcgroupenglish@gmail.com">mcgroupenglish@gmail.com</a>
                    </li>
                </ul>
            </div>
            <div class="footer-section">
                <h3><i class="fa-solid fa-wifi" style="margin-right : 10px"></i>Kết nối với chúng tôi</h3>
                <div class="social-icons">
                    <div class="icon-row">
                        <a href="https://www.facebook.com/09nmc"><i class="fab fa-facebook-f"></i></a>
                        <a href="#"><i class="fab fa-twitter"></i></a>
                    </div>
                    <div class="icon-row">
                        <a href="#"><i class="fab fa-instagram"></i></a>
                        <a href="#"><i class="fas fa-comment"></i> <!-- Thay thế icon cho Zalo -->
                            <span class="sr-only">Zalo</span>
                        </a>

                    </div>
                    <div class="icon-row">
                        <a href="#"><i class="fab fa-linkedin-in"></i></a>
                        <a href="#"><i class="fab fa-tiktok"></i> <!-- Icon TikTok -->
                            <span class="sr-only">TikTok</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
        <div class="footer-bottom">
            <p>&copy; 2024 Hệ thống quản lý sinh viên. Tất cả các quyền được bảo lưu.</p>
            <p>Phiên bản: 24.7 | Thiết kế bởi Cuong Nguyen</p>
        </div>
    </footer>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/aos/2.3.4/aos.js"></script>

    <script>

        /*AOS.init({
            duration: 1000,
            once: true,
            offset: 100
        });

            // Thêm script cho slider
            const slider = document.querySelector('.slider');
            const slides = document.querySelectorAll('.slide');
            const dots = document.querySelectorAll('.dot');
            const prevBtn = document.querySelector('.prev');
            const nextBtn = document.querySelector('.next');
    
            let currentSlide = 0;
            const slideCount = slides.length;
    
            function updateSlider() {
                slider.style.transform = `translateX(-${currentSlide * 25}%)`;
                
                // Update active class for slides
                slides.forEach(slide => slide.classList.remove('active'));
                slides[currentSlide].classList.add('active');
                
                // Update dots
                dots.forEach(dot => dot.classList.remove('active'));
                dots[currentSlide].classList.add('active');
            }
    
            function nextSlide() {
                currentSlide = (currentSlide + 1) % slideCount;
                updateSlider();
            }
    
            function prevSlide() {
                currentSlide = (currentSlide - 1 + slideCount) % slideCount;
                updateSlider();
            }
    
            // Event listeners
            prevBtn.addEventListener('click', prevSlide);
            nextBtn.addEventListener('click', nextSlide);
    
            dots.forEach((dot, index) => {
                dot.addEventListener('click', () => {
                    currentSlide = index;
                    updateSlider();
                });
            });
    
            // Auto slide
            setInterval(nextSlide, 5000);  // Change slide every 5 seconds
    
            // Initialize first slide
            updateSlider();*/

        function truncateText(text, wordLimit) {
            const words = text.split(/\s+/);
            if (words.length > wordLimit) {
                return words.slice(0, wordLimit).join(' ') + '...';
            }
            return text;
        }
        document.addEventListener('DOMContentLoaded', function () {
            const updateBtn = document.getElementById('updateBtn');
            const updateModal = document.getElementById('updateModal');
            const changePasswordBtn = document.getElementById('changePasswordBtn');
            const passwordChangeModal = document.getElementById('passwordChangeModal');
            const closeButtons = document.querySelectorAll('.modal-close');
            const updateForm = document.getElementById('updateForm');
            const passwordChangeForm = document.getElementById('passwordChangeForm');
            const notification = document.getElementById('notification');

            function showModal(modal) {
                modal.style.display = 'flex';
                setTimeout(() => modal.classList.add('active'), 10);
            }

            function hideModal(modal) {
                modal.classList.remove('active');
                setTimeout(() => modal.style.display = 'none', 300);
            }

            function showNotification(message, isError = false) {
                notification.textContent = message;
                notification.classList.add('show');
                if (isError) notification.classList.add('error');
                setTimeout(() => {
                    notification.classList.remove('show', 'error');
                }, 3000);
            }

            updateBtn.addEventListener('click', () => showModal(updateModal));
            changePasswordBtn.addEventListener('click', () => showModal(passwordChangeModal));

            closeButtons.forEach(button => {
                button.addEventListener('click', () => {
                    hideModal(button.closest('.modal'));
                });
            });

            window.addEventListener('click', (event) => {
                if (event.target.classList.contains('modal')) {
                    hideModal(event.target);
                }
            });

            updateForm.addEventListener('submit', async function (e) {
                e.preventDefault();
                const formData = new FormData(this);
                const updatedData = Object.fromEntries(formData.entries());

                try {
                    const response = await fetch('/update-profile', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(updatedData)
                    });

                    const result = await response.json();

                    if (result.success) {
                        showNotification('Cập nhật thông tin thành công! Yêu cầu đăng nhập lại.');
                        hideModal(updateModal);
                        // Update displayed information
                        document.querySelector('h1').textContent = `Chào mừng, ${updatedData.fullname}!`;
                        document.querySelector('.info-list li:nth-child(1)').innerHTML = `<i class="fas fa-user"></i> Họ và tên: ${updatedData.fullname}`;
                        document.querySelector('.info-list li:nth-child(5)').innerHTML = `<i class="fas fa-phone"></i> Số điện thoại: ${updatedData.phone}`;
                        document.querySelector('.info-list li:nth-child(4)').innerHTML = `<i class="fas fa-home"></i> Nơi ở hiện nay: ${updatedData.residence}`;
                        setTimeout(() => {
                            window.location.href = '/'; // Thay '/login' bằng URL trang đăng nhập của bạn
                        }, 2000);

                    } else {
                        showNotification(result.message, true);
                    }
                } catch (error) {
                    console.error('Lỗi khi gửi dữ liệu:', error);
                    showNotification('Có lỗi xảy ra, vui lòng thử lại.', true);
                }
            });

            // Hàm kiểm tra độ mạnh của mật khẩu
            function checkPasswordStrength(password) {
                const length = password.length;
                const hasLowerCase = /[a-z]/.test(password);
                const hasUpperCase = /[A-Z]/.test(password);
                const hasNumber = /[0-9]/.test(password);
                const hasSpecialChar = /[$@#&!]/.test(password);

                if (length > 6 && hasLowerCase && hasUpperCase && hasNumber && hasSpecialChar) {
                    return 'Cực mạnh';
                } else if (length > 6 && hasLowerCase && hasUpperCase && hasNumber) {
                    return 'Mạnh';
                } else if (length > 6 && ((hasLowerCase || hasUpperCase) && hasNumber)) {
                    return 'Trung bình';
                } else if (length > 6 && (hasLowerCase || hasUpperCase || hasNumber)) {
                    return 'Yếu';
                } else if (length < 8 && (hasLowerCase || hasUpperCase || hasNumber)) {
                    return 'Cực yếu';
                } else {
                    return 'Cực yếu';
                }
            }

            // Hàm hiển thị độ mạnh của mật khẩu
            function checkPasswordStrength(password) {
                const length = password.length;
                const hasLowerCase = /[a-z]/.test(password);
                const hasUpperCase = /[A-Z]/.test(password);
                const hasNumber = /[0-9]/.test(password);
                const hasSpecialChar = /[$@#&!]/.test(password);

                if (length > 6 && hasLowerCase && hasUpperCase && hasNumber && hasSpecialChar) {
                    return 'Cực mạnh';
                } else if (length > 6 && hasLowerCase && hasUpperCase && hasNumber) {
                    return 'Mạnh';
                } else if (length > 6 && ((hasLowerCase || hasUpperCase) && hasNumber)) {
                    return 'Trung bình';
                } else if (length > 6 && (hasLowerCase || hasUpperCase || hasNumber)) {
                    return 'Yếu';
                } else {
                    return 'Cực yếu';
                }
            }

            function generatePasswordHints(password) {
                const hints = [];
                if (password.length <= 6) {
                    hints.push('Mật khẩu nên dài hơn 6 ký tự');
                }
                if (!/[a-z]/.test(password)) {
                    hints.push('Thêm chữ cái thường');
                }
                if (!/[A-Z]/.test(password)) {
                    hints.push('Thêm chữ cái hoa');
                }
                if (!/[0-9]/.test(password)) {
                    hints.push('Thêm chữ số');
                }
                if (!/[$@#&!]/.test(password)) {
                    hints.push('Thêm ký tự đặc biệt ($@#&!)');
                }
                return hints;
            }

            function displayPasswordStrengthAndHints(password) {
                const strength = checkPasswordStrength(password);
                const strengthDisplay = document.getElementById('passwordStrength');
                strengthDisplay.textContent = `Độ mạnh mật khẩu: ${strength}`;
                strengthDisplay.className = `password-strength strength-${strength.toLowerCase().replace(' ', '-')}`;

                const hints = generatePasswordHints(password);
                const hintsDisplay = document.getElementById('passwordHints');
                if (hints.length > 0) {
                    hintsDisplay.innerHTML = '<strong>Gợi ý để tạo mật khẩu mạnh hơn:</strong><ul>' +
                        hints.map(hint => `<li>${hint}</li>`).join('') + '</ul>';
                } else {
                    hintsDisplay.innerHTML = '';
                }
            }

            document.getElementById('newPassword').addEventListener('input', function () {
                displayPasswordStrengthAndHints(this.value);
            });

            passwordChangeForm.addEventListener('submit', async function (e) {
                e.preventDefault();
                const currentPassword = document.getElementById('currentPassword').value;
                const newPassword = document.getElementById('newPassword').value;
                const confirmPassword = document.getElementById('confirmPassword').value;

                const passwordStrength = checkPasswordStrength(newPassword);
                if (passwordStrength !== 'Mạnh' && passwordStrength !== 'Cực mạnh') {
                    showNotification('Mật khẩu không đủ mạnh. Vui lòng chọn mật khẩu mạnh hơn.', true);
                    return;
                }

                if (newPassword !== confirmPassword) {
                    showNotification('Mật khẩu mới và xác nhận mật khẩu không khớp.', true);
                    return;
                }

                try {
                    const response = await fetch('/change-password', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({
                            currentPassword,
                            newPassword,
                            iduser: '<%= user.iduser %>'
                        })
                    });

                    const result = await response.json();

                    if (result.success) {
                        showNotification('Đổi mật khẩu thành công! Vui lòng đăng nhập lại.');
                        setTimeout(() => {
                            window.location.href = '/';
                        }, 2000);
                    } else {
                        showNotification(result.message, true);
                    }
                } catch (error) {
                    console.error('Lỗi khi đổi mật khẩu:', error);
                    showNotification('Có lỗi xảy ra, vui lòng thử lại.', true);
                }
            });
        });
        // Hàm kiểm tra mật khẩu có khớp không
        function checkPasswordMatch() {
            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const matchDisplay = document.getElementById('passwordMatch');

            if (newPassword === confirmPassword && confirmPassword !== '') {
                matchDisplay.textContent = 'Mật khẩu trùng khớp';
                matchDisplay.style.color = 'green';
            } else if (confirmPassword === '') {
                matchDisplay.textContent = ''; // Xóa thông báo khi trường xác nhận trống
            } else {
                matchDisplay.textContent = 'Mật khẩu không khớp';
                matchDisplay.style.color = 'red';
            }
        }

        // Thêm sự kiện lắng nghe cho trường nhập lại mật khẩu
        document.getElementById('confirmPassword').addEventListener('input', checkPasswordMatch);

        //hien thi thong bao
        document.getElementById('viewAllNotificationsBtn').addEventListener('click', async () => {
            const userId = '<%= user.iduser %>';
            console.log('Gửi yêu cầu đến API với userId:', userId);

            const response = await fetch(`/api/notifications/all?userId=${userId}`);

            if (response.ok) {
                const data = await response.json();
                displayNotificationsInModal(data.notifications);
            } else {
                console.error('Failed to fetch notifications:', response.statusText);
            }
        });

        function displayNotificationsInModal(notifications) {
            const notificationDetails = document.getElementById('notificationDetails');
            notificationDetails.innerHTML = ''; // Xóa nội dung cũ

            if (notifications.length > 0) {
                notifications.forEach(notification => {
                    const notificationItem = document.createElement('div');
                    notificationItem.classList.add('notification-item');

                    // Tạo phần tử cho nội dung thông báo
                    const content = document.createElement('div');
                    content.innerHTML = notification.content; // Sử dụng innerHTML để hiển thị định dạng

                    // Tạo phần tử cho thời gian
                    const createdAt = document.createElement('div');
                    createdAt.classList.add('notification-time'); // Lớp CSS cho thời gian
                    createdAt.innerText = new Date(notification.createdat).toLocaleString(); // Chuyển đổi thời gian

                    // Thêm nội dung và thời gian vào phần tử thông báo
                    notificationItem.appendChild(content);
                    notificationItem.appendChild(createdAt);

                    notificationDetails.appendChild(notificationItem);
                });
            } else {
                notificationDetails.innerHTML = '<p>Không có thông báo nào.</p>';
            }

            document.getElementById('customNotificationModal').style.display = 'block'; // Hiển thị modal
        }

        function closeModal() {
            const modal = document.getElementById('customNotificationModal');
            modal.style.display = 'none'; // Ẩn modal
        }
        //danh gia

        document.addEventListener('DOMContentLoaded', function () {
            fetchVideos();
        });

        async function fetchVideos() {
            const userId = '<%= user.iduser %>'; // Đảm bảo rằng biến này được render đúng từ server
            try {
                const response = await fetch(`/api/student-videos/${userId}`);
                if (!response.ok) throw new Error('Failed to fetch videos');
                const data = await response.json();
                if (data.success) {
                    displayVideos(data.videos);
                } else {
                    throw new Error(data.error || 'Unknown error occurred');
                }
            } catch (error) {
                console.error('Error:', error);
                // Hiển thị thông báo lỗi cho người dùng nếu cần
                const videoList = document.getElementById('videoList');
                videoList.innerHTML = '<p>Đã xảy ra lỗi khi tải video. Vui lòng thử lại sau.</p>';
            }
        }

        function displayVideos(videos) {
            const videoList = document.getElementById('videoList');
            const allVideos = document.getElementById('allVideos');

            // Xóa nội dung cũ trước khi thêm video mới
            videoList.innerHTML = '';
            allVideos.innerHTML = '';

            if (videos.length === 0) {
                videoList.innerHTML = '<p>Không có video nào.</p>';
                allVideos.innerHTML = '<p>Không có video nào.</p>';
                return;
            }

            // Hiển thị tối đa 2 video trên bảng điều khiển
            videos.slice(0, 2).forEach(video => {
                videoList.appendChild(createVideoElement(video));
            });

            // Hiển thị tất cả video trong modal
            videos.forEach(video => {
                allVideos.appendChild(createVideoElement(video));
            });
        }

        function createVideoElement(video) {
            const videoElement = document.createElement('div');
            videoElement.className = 'video-item';
            videoElement.innerHTML = `
                <h3>${video.namevideo || 'Untitled Video'}</h3>
                <iframe width="560" height="315" src="${video.linkvideo.replace('watch?v=', 'embed/')}" frameborder="0" allowfullscreen></iframe>
            `;
            return videoElement;
        }

        // Hàm để mở modal
        function openVideoModal() {
            // Gọi API để lấy danh sách video
            const userId = '<%= user.iduser %>'; // Đảm bảo rằng biến này được render đúng từ server
            fetch(`/api/studentvideos/${userId}`) // Sửa lại đường dẫn API cho đúng
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to fetch videos');
                    }
                    return response.json();
                })
                .then(data => {
                    const videoContainer = document.getElementById('allVideos');
                    videoContainer.innerHTML = ''; // Xóa nội dung cũ

                    // Thêm video vào modal
                    data.videos.forEach(video => {
                        const videoElement = document.createElement('div');
                        videoElement.classList.add('video-item');
                        videoElement.innerHTML = `
                            <h3>${video.namevideo}</h3> <!-- Sử dụng video.namevideo -->
                            <iframe src="${video.linkvideo}" frameborder="0" allowfullscreen></iframe> <!-- Sử dụng video.linkvideo -->
                        `;
                        videoContainer.appendChild(videoElement);
                    });

                    // Hiển thị modal
                    document.getElementById('videoModal').style.display = 'block';
                })
                .catch(error => {
                    console.error('Error fetching videos:', error);
                    alert('Đã xảy ra lỗi khi tải video. Vui lòng thử lại sau.');
                });
        }

        // Hàm để đóng modal
        function closeVideoModal() {
            document.getElementById('videoModal').style.display = 'none';
        }
        let notificationList = []; // Định nghĩa notificationList ở phạm vi toàn cục

        // Lắng nghe sự kiện click vào nút refresh
        document.querySelector(".refresh-btn").addEventListener("click", function () {
            // Gửi yêu cầu AJAX để tải lại danh sách thông báo
            fetch('/api/get-notifications')  // Route này phải trả về danh sách thông báo mới
                .then(response => response.json())
                .then(data => {
                    if (data.notifications) {
                        const notificationsContainer = document.getElementById('notificationsContainer');
                        const notificationCountElement = document.querySelector('.notification-count');  // Phần tử hiển thị tổng số thông báo
                        const notificationList = data.notifications;

                        // Làm rỗng container trước khi thêm thông báo mới
                        notificationsContainer.innerHTML = '';

                        if (notificationList.length > 0) {
                            let html = '<ul class="notification-list">';
                            notificationList.slice(0, 5).forEach(function (notification, index) {
                                html += `
            <li class="notification-item" data-notification-id="${notification.id}" onclick="showNotificationDetails(${notification.id})">
                                    <div class="notification-content">
                                        <div class="notification-header-row">
                                            <h3 class="notification-title">Thông báo ${notificationList.length - index}</h3>
                                            ${index < 3 ? '<span class="new-badge">Mới</span>' : ''}
                                        </div>
                                        <p>${truncateText(notification.content, 15)}</p>
                                        <div class="notification-meta">
                                            <span class="notification-time"><i class="far fa-clock"></i> ${new Date(notification.createdat).toLocaleString('vi-VN')}</span>
                                        </div>
                                    </div>
                                </li>`;
                            });
                            html += '</ul>';
                            notificationsContainer.innerHTML = html;

                            // Cập nhật tổng số thông báo
                            notificationCountElement.textContent = notificationList.length;

                            // Re-apply CSS or JS behavior for the new content here
                            // Ví dụ: Nếu bạn có các biểu tượng hoặc style cần tải lại
                            feather.replace(); // Nếu sử dụng Feather icons
                        } else {
                            notificationsContainer.innerHTML = '<p class="no-notifications"><i class="fas fa-info-circle"></i> Hiện tại không có thông báo nào.</p>';
                            notificationCountElement.textContent = 0; // Khi không có thông báo nào
                        }
                    } else {
                        alert('Có lỗi xảy ra khi tải thông báo mới.');
                    }
                })
                .catch(error => console.error('Error refreshing notifications:', error));
        });

        // Hàm showNotificationDetails
        // Hàm showNotificationDetails
        function showNotificationDetails(notificationId) {
            fetch('/api/get-notifications')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Lỗi mạng hoặc không thể lấy dữ liệu.');
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('Dữ liệu trả về từ API:', data);
                    if (data.notifications) {
                        const notificationList = data.notifications;
                        console.log("Danh sách thông báo hiện tại:", notificationList);

                        const notification = notificationList.find(n => n.id === notificationId);
                        const index = notificationList.indexOf(notification);

                        if (notification) {
                            const notificationDetails = document.getElementById('notificationDetails');
                            notificationDetails.innerHTML = `
                        <h3 class="notification-title">Thông báo ${notificationList.length - index}</h3>
                        <p>${notification.content}</p>
    <div class="notification-meta" style="margin-top: 10px; margin-left: -30px;"> <!-- Thay đổi margin-top nếu cần -->
        <span class="notification-time"><i class="far fa-clock"></i> ${new Date(notification.createdat).toLocaleString('vi-VN')}</span>
    </div>
                    `;
                            document.getElementById('customNotificationModal').style.display = 'block';
                        } else {
                            console.error("Không tìm thấy thông báo với ID:", notificationId);
                        }
                    } else {
                        console.error('Không có thông báo nào được trả về từ API.');
                    }
                })
                .catch(error => console.error('Lỗi khi gọi API:', error));
        }

        // Thêm sự kiện click cho document
        document.addEventListener('click', function (event) {
            const modal = document.getElementById('customNotificationModal');

            // Kiểm tra xem modal đang hiển thị
            if (modal.style.display === 'block') {
                // Nếu click vào modal thì không làm gì cả
                if (event.target === modal) {
                    closeModal(); // Nếu click ra ngoài modal thì đóng modal
                }
            }
        });

        // Thêm sự kiện cho phím Esc
        document.addEventListener('keydown', function (event) {
            if (event.key === 'Escape') { // Kiểm tra nếu phím nhấn là Esc
                closeModal(); // Gọi hàm closeModal để ẩn modal
            }
        });

        // Hàm closeModal để ẩn modal
        function closeModal() {
            document.getElementById('customNotificationModal').style.display = 'none';
        }


        
        // Các hàm openVideoModal và closeVideoModal giữ nguyên    

        /*// Ngăn người dùng nhấn chuột phải
        document.addEventListener('contextmenu', function (e) {
            e.preventDefault();
        });

        // Ngăn người dùng nhấn F12 (Mở Developer Tools)
        document.addEventListener('keydown', function (e) {
            if (e.key === 'F12' || (e.ctrlKey && e.shiftKey && e.key === 'I')) {
                e.preventDefault();
            }
        });*/

    </script>

    <!--<script>
        // Ngăn người dùng nhấn chuột phải
        document.addEventListener('contextmenu', function (e) {
            e.preventDefault();
        });

        // Ngăn người dùng nhấn F12 (Mở Developer Tools)
        document.addEventListener('keydown', function (e) {
            if (e.key === 'F12' || (e.ctrlKey && e.shiftKey && e.key === 'I')) {
                e.preventDefault();
            }
        });
        document.addEventListener('keydown', function(event) {
            if (event.ctrlKey && (event.key === 'u' || event.key === 'U')) {
                event.preventDefault(); // Ngăn Ctrl+U
            }
        });
    </script> -->

</body>

</html>