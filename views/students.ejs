<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="icon" href="/uploads/MC2.png" type="image/x-icon">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.19/tailwind.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f3f4f6;
        }
        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 2rem;
        }
        .table-container {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }
        table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
        }
        th, td {
            padding: 1rem;
            text-align: left;
        }
        th {
            background-color: #4f46e5;
            color: white;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.875rem;
        }
        tr:nth-child(even) {
            background-color: #f9fafb;
        }
        .action-button {
            padding: 0.5rem 1rem;
            border-radius: 4px;
            font-weight: 500;
            transition: all 0.3s ease;
        }
        .view-btn {
            background-color: #10b981;
            color: white;
        }
        .view-btn:hover {
            background-color: #059669;
        }
        .graduation-btn {
            background-color: #3aa4ce; /* Màu xanh dương nhạt */
            color: white; /* Màu chữ trắng */
            padding: 10px 20px; /* Khoảng cách bên trong */
            border: none; /* Không có viền */
            border-radius: 5px; /* Bo góc */
            cursor: pointer; /* Con trỏ chuột khi di chuột qua nút */
            text-decoration: none; /* Bỏ gạch chân */
            transition: background-color 0.3s; /* Hiệu ứng chuyển màu mượt mà */
        }
        
        .graduation-btn:hover {
            background-color: #00BFFF; /* Màu xanh đậm hơn khi hover */
        }
        
        .delete-btn {
            background-color: #ef4444;
            color: white;
        }
        .delete-btn:hover {
            background-color: #dc2626;
        }
        .modal {
            background-color: rgba(0, 0, 0, 0.5);
        }
        .modal-content {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }
        .close {
            color: #6b7280;
            transition: color 0.3s ease;
        }
        .close:hover {
            color: #ef4444;
        }
        input[type="text"], input[type="email"] {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #d1d5db;
            border-radius: 4px;
            font-size: 1rem;
            transition: border-color 0.3s ease;
        }
        input[type="text"]:focus, input[type="email"]:focus {
            outline: none;
            border-color: #4f46e5;
            box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
        }
        button[type="submit"] {
            background-color: #4f46e5;
            color: white;
            padding: 0.75rem 1.5rem;
            border-radius: 4px;
            font-weight: 600;
            transition: background-color 0.3s ease;
        }
        button[type="submit"]:hover {
            background-color: #4338ca;
        }
    </style>
</head>
<body class="bg-gray-100">
    <div class="container">
        <h1 class="text-3xl font-bold text-center text-gray-800 mb-4"><%= title %></h1>
        <h2 class="text-xl font-semibold text-center text-gray-600 mb-8">ID Lớp: <%= idclass %></h2>
        
        <div class="table-container mb-8">
            <table>
                <thead>
                    <tr>
                        <th>ID Sinh Viên</th>
                        <th>Họ Tên</th>
                        <th>Email</th>
                        <th>Số Điện Thoại</th>
                        <th>Địa Chỉ</th>
                        <th>Hành Động</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (students.length > 0) { %>
                        <% students.forEach(student => { %>
                            <tr>
                                <td><%= student.iduser %></td>
                                <td><%= student.fullname %></td>
                                <td><%= student.email %></td>
                                <td><%= student.phone %></td>
                                <td><%= student.current_residence %></td>
                                <td class="flex space-x-2">
                                    <a href="/graduation/<%= student.iduser %>/<%= idclass %>" class="action-button graduation-btn">
                                        <i class="fas fa-graduation-cap mr-1"></i> Tốt nghiệp
                                    </a>
                                                                                                                                            
                                    <a href="/students/<%= student.iduser %>/attendance/<%= idclass %>" class="action-button view-btn">
                                        <i class="fas fa-eye mr-1"></i> Điểm danh
                                    </a>
                                    <a href="/students/score/<%= student.iduser %>/<%= idclass %>" class="action-button bg-yellow-500 hover:bg-yellow-600 text-white">
                                        <i class="fas fa-edit mr-1"></i> Nhập điểm
                                    </a>
                
                                    <button class="action-button delete-btn" onclick="deleteStudent('<%= student.iduser %>', '<%= student.fullname %>')">
                                        <i class="fas fa-trash-alt mr-1"></i> Xóa
                                    </button>
                                </td>
                            </tr>
                        <% }); %>
                    <% } else { %>
                        <tr>
                            <td colspan="6" class="text-center py-4 text-gray-500">Không có sinh viên nào trong lớp này.</td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
        
        <button id="addStudentBtn" class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded transition duration-300 ease-in-out transform hover:scale-105">
            <i class="fas fa-user-plus mr-2"></i> Thêm Sinh Viên
        </button>
        
        <div id="addStudentModal" class="modal fixed inset-0 flex items-center justify-center hidden">
            <div class="modal-overlay absolute inset-0 bg-black opacity-50"></div>
            <div class="modal-content bg-white p-8 rounded-lg shadow-lg z-50 w-full max-w-md">
                <div class="flex justify-between items-center mb-6">
                    <h2 class="text-2xl font-bold text-gray-800">Thêm Sinh Viên Mới</h2>
                    <span class="close text-gray-600 text-2xl cursor-pointer">&times;</span>
                </div>
                <form id="addStudentForm">
                    <input type="hidden" id="classCode" name="classCode" value="<%= idclass %>">
                    <div class="mb-4">
                        <label for="studentId" class="block text-gray-700 font-bold mb-2">ID Sinh Viên:</label>
                        <input type="text" id="studentId" name="studentId" required class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                    </div>
                    <div class="mb-4">
                        <label for="fullName" class="block text-gray-700 font-bold mb-2">Họ Tên:</label>
                        <input type="text" id="fullName" name="fullName" required class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                    </div>
                    <div class="mb-4">
                        <label for="email" class="block text-gray-700 font-bold mb-2">Email:</label>
                        <input type="email" id="email" name="email" required class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                    </div>
                    <div class="mb-4">
                        <label for="phone" class="block text-gray-700 font-bold mb-2">Số Điện Thoại:</label>
                        <input type="text" id="phone" name="phone" required class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                    </div>
                    <div class="mb-6">
                        <label for="currentResidence" class="block text-gray-700 font-bold mb-2">Địa Chỉ:</label>
                        <input type="text" id="currentResidence" name="currentResidence" required class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                    </div>
                    <button type="submit" class="w-full bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600 transition duration-300">Thêm Sinh Viên</button>
                </form>
            </div>
        </div>

        <a href="/admin/dashboard" class="inline-block mt-8 bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded transition duration-300 ease-in-out">
            <i class="fas fa-arrow-left mr-2"></i> Quay lại Dashboard
        </a>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const modal = document.getElementById("addStudentModal");
            const btn = document.getElementById("addStudentBtn");
            const span = document.getElementsByClassName("close")[0];
            const form = document.getElementById("addStudentForm");
        
            btn.onclick = function() {
                modal.classList.remove('hidden');
            }
        
            span.onclick = function() {
                modal.classList.add('hidden');
            }
        
            window.onclick = function(event) {
                if (event.target == modal) {
                    modal.classList.add('hidden');
                }
            }
        
            form.onsubmit = async function(e) {
                e.preventDefault();
                
                const formData = new FormData(form);
                const data = {
                    studentId: formData.get('studentId'),
                    fullName: formData.get('fullName'),
                    email: formData.get('email'),
                    phone: formData.get('phone'),
                    currentResidence: formData.get('currentResidence'),
                    classCode: formData.get('classCode')
                };
                
                try {
                    const response = await fetch('/students/add', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data),
                    });
        
                    const result = await response.json();
        
                    if (result.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Thành công!',
                            text: result.message,
                            confirmButtonColor: '#3085d6',
                        }).then((result) => {
                            if (result.isConfirmed) {
                                modal.classList.add('hidden');
                                location.reload();
                            }
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi!',
                            text: result.message,
                            confirmButtonColor: '#3085d6',
                        });
                    }
                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi!',
                        text: 'Có lỗi xảy ra khi thêm sinh viên.',
                        confirmButtonColor: '#3085d6',
                    });
                }
            }
        });

        function deleteStudent(studentId, studentName) {
            const urlParts = window.location.pathname.split('/');
            const classId = urlParts[urlParts.length - 2]; // Giả sử idclass nằm trước phần students trong URL
        
            Swal.fire({
                title: 'Bạn có chắc chắn?',
                text: `Bạn muốn xóa sinh viên ${studentName} (ID: ${studentId}) khỏi lớp ${classId}?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    const encodedClassId = encodeURIComponent(classId);

                    fetch(`/admin/delete-student/${studentId}/${classId}`, {
                        method: 'DELETE',
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire(
                                'Đã xóa!',
                                data.message,
                                'success'
                            ).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire(
                                'Lỗi!',
                                data.message,
                                'error'
                            );
                        }
                    })
                    .catch((error) => {
                        console.error('Error:', error);
                        Swal.fire(
                            'Lỗi!',
                            'Có lỗi xảy ra khi xóa sinh viên.',
                            'error'
                        );
                    });
                }
            });
        }
                            </script>
</body>
</html>