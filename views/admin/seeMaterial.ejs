<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tài liệu Giáo dục</title>
    <link rel="icon" href="/uploads/MC2.png" type="image/x-icon">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.19/tailwind.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
        .bg-education {
            background-color: #4A90E2;
        }
        .text-education {
            color: #4A90E2;
        }
        .hover-education:hover {
            background-color: #3A7BC8;
        }
        ol {
            padding-left: 20px; /* Khoảng cách bên trái cho số thứ tự */
        }
        ol li {
            margin-bottom: 10px; /* Khoảng cách giữa các mục trong danh sách */
            font-size: 1.1rem; /* Kích thước chữ cho dễ đọc */
            color: #333; /* Màu chữ cho dễ nhìn */
        }
        a {
            color: #1E90FF; /* Màu xanh dương */
            text-decoration: none; /* Bỏ gạch chân cho liên kết */
            transition: color 0.3s; /* Hiệu ứng chuyển màu khi hover */
        }
        a:hover {
            color: #0B76E2; /* Màu khi hover */
            text-decoration: underline; /* Gạch chân khi hover */
        }
        .checkbox-list {
            list-style-type: none;
            padding: 0;
        }
        .checkbox-list li {
            margin-bottom: 0.5rem;
        }
        .checkbox-list input[type="checkbox"] {
            margin-right: 0.5rem;
        }
    </style>
</head>
<body class="bg-gray-100 font-sans flex flex-col min-h-screen">
    <nav class="bg-education text-white p-4 shadow-md">
        <div class="container mx-auto flex justify-between items-center">
            <h1 class="text-2xl font-bold">Trung tâm Tài liệu</h1>
            <a href="/admin/dashboard" class="flex items-center text-white hover:text-gray-300 transition duration-300">
                <i class="fas fa-home text-2xl mr-2"></i>
                <span class="text-lg">Trang chủ</span>
            </a>
        </div>
    </nav>

    <div class="flex-grow container mx-auto px-4 py-8 flex">
        <div class="w-2/3 pr-4"> <!-- Cột bên trái lớn hơn -->
            <header class="mb-8 text-center">
                <h2 class="text-3xl font-bold text-gray-800">Kho Tài liệu Tiếng Anh</h2>
                <p class="text-gray-600 mt-2">Khám phá và truy cập các tài liệu học tập chất lượng cao</p>
            </header>

            <div id="document-list" class="bg-white rounded-lg shadow-md p-8 text-center">
                <i class="fas fa-inbox text-5xl text-gray-400 mb-4"></i>
                <p class="text-xl text-gray-600">Vui lòng chọn một thư mục để xem tài liệu.</p>
            </div>
        </div>

        <div class="w-1/3"> <!-- Cột bên phải để hiển thị danh sách namedoc -->
            <header class="mb-8 text-center">
                <h3 class="text-2xl font-bold text-gray-800">Danh sách Thư mục</h3>
            </header>
            <% if (Object.keys(groupedMaterials).length === 0) { %>
                <div class="bg-white rounded-lg shadow-md p-4 text-center">
                    <p class="text-gray-600">Không có thư mục nào.</p>
                </div>
            <% } else { %>
                <div class="grid grid-cols-1 gap-4">
                    <% for (const namedoc in groupedMaterials) { %>
                        <div class="bg-white rounded-lg shadow-lg overflow-hidden transition duration-300 ease-in-out transform hover:-translate-y-1 hover:shadow-xl">
                            <div class="bg-education text-white p-4">
                                <h3 class="text-xl font-semibold"><%= namedoc %></h3>
                            </div>
                            <div class="p-6">
                                <p class="text-gray-700 mb-4">
                                    <i class="fas fa-book-open mr-2 text-education"></i>
                                    Tổng số tài liệu: <span class="font-medium"><%= groupedMaterials[namedoc] %></span>
                                </p>
                                <div class="flex justify-between mt-4"> <!-- Flex để căn chỉnh các nút -->
                                    <button onclick="showDocuments('<%= namedoc %>')" class="block text-center bg-education text-white py-2 px-4 rounded hover-education transition duration-300 ease-in-out w-1/3">
                                        <i class="fas fa-eye mr-2"></i>Xem tất cả tài liệu
                                    </button>
                                    <button onclick="confirmDelete('<%= namedoc %>')" class="block text-center bg-red-500 text-white py-2 px-4 rounded hover:bg-red-600 transition duration-300 ease-in-out w-1/3 mx-2">
                                        <i class="fas fa-trash mr-2"></i>Xóa thư mục
                                    </button>
                                    <button onclick="showDocuments('<%= namedoc %>', true)" class="block text-center bg-yellow-500 text-white py-2 px-4 rounded hover:bg-yellow-600 transition duration-300 ease-in-out w-1/3">
                                        <i class="fas fa-trash-alt mr-2"></i>Xóa tài liệu
                                    </button>
                                                </div>
                                
                            </div>
                        </div>
                    <% } %>
                </div>
            <% } %>
        </div>
    </div>

    <footer class="bg-gray-800 text-white py-6">
        <div class="container mx-auto text-center">
            <p>&copy; 2024 Trung tâm Tài liệu Giáo dục của Cường Nguyễn. Đã đăng ký bản quyền.</p>
        </div>
    </footer>

    <script>
        async function showDocuments(namedoc) {
            console.log("Fetching documents for:", namedoc);
            try {
                const response = await fetch('/get-materials', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ namedoc }),
                });
        
                if (!response.ok) {
                    throw new Error('Network response was not ok ' + response.statusText);
                }
        
                const materials = await response.json();
                console.log("Received materials:", materials);
        
                const documentList = document.getElementById("document-list");
                if (materials.length > 0) {
                    const docItems = materials.map(doc => `
                    <li>
                        <a href="/uploads/${doc.urlmaterial.split('\\').pop()}" target="_blank">${doc.namematerial}</a>
                    </li>
                `).join('');
                                      
                documentList.innerHTML = `
                <h4 class="text-2xl font-bold text-gray-800 mb-4">${namedoc}</h4>
                <ol class="list-decimal list-inside text-left">${docItems}</ol>
            `;
                } else {
                    documentList.innerHTML = `<p class="text-xl text-gray-600">Không tìm thấy tài liệu nào cho thư mục này.</p>`;
                }
            } catch (error) {
                console.error('Error fetching materials:', error);
                document.getElementById("document-list").innerHTML = `<p class="text-xl text-red-600">Có lỗi xảy ra: ${error.message}</p>`;
            }
        }

        // Xóa thư mục
        async function confirmDelete(namedoc) {
            // Hiển thị hộp thoại xác nhận xóa
            const result = await Swal.fire({
                title: 'Xác nhận xóa?',
                text: `Bạn có chắc chắn muốn xóa thư mục "${namedoc}" không?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Đồng ý',
                cancelButtonText: 'Hủy'
            });
        
            // Nếu người dùng click nút xác nhận
            if (result.isConfirmed) {
                // Hiển thị thông báo "Đang xử lý" với biểu tượng xoay tròn
                Swal.fire({
                    title: 'Đang xử lý...',
                    text: 'Xin vui lòng đợi trong giây lát.',
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading(); // Hiển thị biểu tượng xoay tròn
                    }
                });
        
                try {
                    const response = await fetch('/delete-materials', {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ namedoc }),
                    });
        
                    if (!response.ok) {
                        throw new Error('Network response was not ok ' + response.statusText);
                    }
        
                    // Hiển thị thông báo thành công
                    await Swal.fire({
                        title: 'Đã xóa!',
                        text: `Thư mục "${namedoc}" đã được xóa thành công!`,
                        icon: 'success',
                        timer: 1500
                    });
        
                    location.reload();
        
                } catch (error) {
                    console.error('Error deleting materials:', error);
                    // Hiển thị thông báo lỗi
                    await Swal.fire({
                        title: 'Lỗi!',
                        text: `Có lỗi xảy ra khi xóa thư mục: ${error.message}`,
                        icon: 'error'
                    });
                }
            }
        }
                // Xóa file bất kỳ
        async function showDocuments(namedoc, deleteMode = false) {
            console.log("Đang tải tài liệu cho:", namedoc);
            try {
                const response = await fetch('/get-materials', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ namedoc }),
                });
        
                if (!response.ok) {
                    throw new Error('Lỗi kết nối ' + response.statusText);
                }
        
                const materials = await response.json();
                console.log("Đã nhận tài liệu:", materials);
        
                const documentList = document.getElementById("document-list");
                if (Array.isArray(materials) && materials.length > 0) {
                    let docItems;
                    if (deleteMode) {
                        docItems = materials.map((doc, index) => `
                            <li class="flex items-center justify-between">
                                <span class="text-blue-600">${index + 1}. ${doc.namematerial}</span>
                                <input type="checkbox" name="document" value="${doc.namematerial}" class="form-checkbox w-6 h-6">
                            </li>
                        `).join('');
                    } else {
                        docItems = materials.map((doc, index) => `
                            <li class="flex items-center justify-between">
                                <span class="text-blue-600">${index + 1}. <a href="/uploads/${doc.urlmaterial.split('\\').pop()}" target="_blank" class="text-blue-600 hover:underline">${doc.namematerial}</a></span>
                            </li>
                        `).join('');
                    }                
                                      
                    documentList.innerHTML = `
                        <h4 class="text-2xl font-bold text-gray-800 mb-4">${namedoc}</h4>
                        <ol class="list-decimal list-inside text-left ${deleteMode ? 'space-y-2' : ''}">${docItems}</ol>
                        ${deleteMode ? `
                            <button onclick="deleteSelectedDocuments('${namedoc}')" class="mt-6 bg-red-500 text-white py-2 px-4 rounded hover:bg-red-600 transition duration-300 ease-in-out">
                                Xóa tài liệu đã chọn
                            </button>
                        ` : ''}
                    `;
                } else {
                    documentList.innerHTML = `<p class="text-xl text-gray-600">Không tìm thấy tài liệu nào cho thư mục này.</p>`;
                }
            } catch (error) {
                console.error('Lỗi khi tải tài liệu:', error);
                document.getElementById("document-list").innerHTML = `<p class="text-xl text-red-600">Có lỗi xảy ra: ${error.message}</p>`;
            }
        }
        
        async function deleteSelectedDocuments(namedoc) {
            const selectedDocuments = Array.from(document.querySelectorAll('#document-list input[type="checkbox"]:checked'))
                .map(checkbox => checkbox.value);
        
            if (selectedDocuments.length === 0) {
                // Thông báo lỗi khi chưa chọn tài liệu
                Swal.fire({
                    icon: 'warning',
                    title: 'Chưa chọn tài liệu',
                    text: 'Vui lòng chọn ít nhất một tài liệu để xóa.',
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: 'Đóng'
                });
                return;
            }
        
            // Hiện hộp thoại xác nhận xóa
            const confirmResult = await Swal.fire({
                title: 'Xác nhận xóa',
                text: `Bạn có chắc chắn muốn xóa ${selectedDocuments.length} tài liệu đã chọn không?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Có, xóa ngay!',
                cancelButtonText: 'Hủy',
                reverseButtons: true
            });
        
            if (confirmResult.isConfirmed) {
                try {
                    // Hiển thị loading spinner
                    Swal.fire({
                        title: 'Đang xử lý',
                        html: 'Vui lòng chờ trong giây lát...',
                        allowOutsideClick: false,
                        allowEscapeKey: false,
                        allowEnterKey: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    });
        
                    const response = await fetch('/delete-selected-materials', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ namedoc, selectedDocuments }),
                    });
        
                    if (!response.ok) {
                        throw new Error('Lỗi kết nối ' + response.statusText);
                    }
        
                    const result = await response.json();
        
                    // Thông báo xóa thành công
                    await Swal.fire({
                        icon: 'success',
                        title: 'Thành công!',
                        text: `${result.message} Còn lại ${result.remainingCount} tài liệu.`,
                        confirmButtonColor: '#3085d6',
                        confirmButtonText: 'Đóng'
                    });
        
                    // Làm mới lại trang
                    window.location.reload();
        
                } catch (error) {
                    console.error('Lỗi khi xóa tài liệu:', error);
                    
                    // Thông báo lỗi
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi!',
                        text: `Có lỗi xảy ra khi xóa tài liệu: ${error.message}`,
                        confirmButtonColor: '#d33',
                        confirmButtonText: 'Đóng'
                    });
                }
            }
        }                  
    </script>
</body>
</html>
